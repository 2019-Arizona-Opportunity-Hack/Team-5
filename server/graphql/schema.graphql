type Query {
    user(id: ID!): User
    event(id: ID!): Event
    # findUsers(user: User): [User]
    # findEvents(event: Event): [Event]
}

type Mutation {
    newUser(user: UserInput!, household: [UserInput]): Success
    newEvent(event: EventInput!): Success
    addUserToEvent(userId: ID!, eventId: ID!): Success
    # updateUser(id: ID, changes: User): Boolean
    # updateEvent(id: ID, changes: Event): Boolean
    # deleteUser(userId: ID): Boolean
    # deleteEvent(eventId: ID): Boolean
    # addUserToEvent(userId: ID, eventId: ID): Boolean
}

scalar Date

type User {
    id: ID!
    firstName: String!
    lastName: String
    dateOfBirth: Date
    address: String
    zipCode: Int
    city: String
    phoneNumber: String
    emailAddress: String
    isHeadOfHousehold: Boolean
    gender: Gender
    housingType: Housing
    ethnicity: Ethnicity
    selfIdentification: [Identification]
    highestEducationCompleted: HighestEducation
    primaryLanguage: [Language]
    employmentType: Employment
    hasDentalInsurance: Boolean
    hasPrimaryDoctor: Boolean
    monthlyIncome: Float
    monthlyIncomeType: MonthlyIncome
    medicalInsuranceType: MedicalInsurance
    childCareType: ChildCare
    household: [User]
    eventsAttended: [Event]
}

input UserInput {
    firstName: String!
    lastName: String!
    dateOfBirth: Date
    address: String
    zipCode: Int
    city: String
    phoneNumber: String
    emailAddress: String
    gender: Gender
    housingType: Housing
    ethnicity: Ethnicity
    selfIdentification: [Identification]
    highestEducationCompleted: HighestEducation
    primaryLanguage: [Language]
    employmentType: Employment
    hasDentalInsurance: Boolean
    hasPrimaryDoctor: Boolean
    monthlyIncome: Float
    monthlyIncomeType: MonthlyIncome
    medicalInsuranceType: MedicalInsurance
    childCareType: ChildCare
}

type Event {
    id: ID!
    name: String
    usersAttended: [User]
    datetime: Date
}

input EventInput {
    name: String!
    datetime: Date
}

type Success {
    success: Boolean
}

enum Gender {
    Male
    Female
    Other
}

enum Housing {
    Emergency
    Evacuee
    HomeOwner
    Other
}

enum Identification {
    Disability
    Veteran
    MentalIllness
    Pregnant
    Postpartum
    Breastfeeding
    Undisclosed
    Ederly
    LGBTQ
    Other
}

enum Ethnicity {
    White
    AfricanAmerican
    HispanicLatino
    AmericanIndianNativeAmerican
    Asian
    AlaskaNativeAleutEskimo
    MiddleEasternNorthAfrican
    PacificIslander
    Undisclosed
    Other
}

enum HighestEducation {
    ElementaryMiddleSchool
    HighSchool
    HighSchoolGraduate
    GenderPostSecondary
    Tradeschool
    AssociatesDegree
    BachelorsDegree
    PHD
    Undisclosed
}

enum Language {
    English
    Spanish
    Other
}

enum Employment {
    PostSecondaryStudent
    FullTime
    PartTime
    REtried
    None
    Undisclosed
    Other
}

enum MonthlyIncome {
    Amount
    CommoditySupplementalFoodProgram
    SupplementalAssistanceWIC
    SupplementalNutritionAssistanceProgramSNAP
    CashAssistantTANF
    DESChildCareSubsidy
    QualityFirstScholarship
    Other
}

enum MedicalInsurance {
    Employer
    Private
    AHCCCS
    IndianHealthServices
    Military
    None
    Other
}

enum ChildCare {
    AtHome
    HeadStart
    ChildCareCenterPreschoolProgram
    FamilyChildCareHome
    RelativeNeighborOrBabysitter
}
